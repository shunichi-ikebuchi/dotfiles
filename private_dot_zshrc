# Environment variables settings
export GOPATH="$HOME"
export PATH="$PATH:$HOME/bin"
export EDITOR="vim"
export LANG="en_US.UTF-8"
export GPG_TTY="$(tty)"
export GHQ_ROOT="$HOME/src"

# Jenkins
export JAVA_HOME="$(/usr/libexec/java_home -v '17')"
export PATH="$JAVA_HOME/bin:$PATH"
export JENKINS_HOME="$HOME/.jenkins"

# Pico
export PICO_SDK_PATH="$HOME/src/pico-sdk"

# Python Settings
export PYENV_ROOT="$HOME/.pyenv"
[[ -d "$PYENV_ROOT/bin" ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init - zsh)"

# Poetry
export PATH="$HOME/.local/bin:$PATH"

# Aqua
export PATH="${AQUA_ROOT_DIR:-${XDG_DATA_HOME:-$HOME/.local/share}/aquaproj-aqua}/bin:$PATH"
export PATH="$HOME/.aqua/bin:$PATH"

# Key bind
bindkey -e

# Command completion
autoload -Uz compinit && compinit
zstyle ':completion:*' menu select  # Enable menu-style completion (selectable with Tab)
bindkey '^[[Z' autosuggest-accept

# gwq auto-completion (for Zsh)
source <(gwq completion zsh)

# Aliases (unified to double quotes for consistency)
alias vi="nvim"
alias ls="ls -G"  # Colored ls on macOS (use --color=auto on Linux)
alias ll="ls -lh"  # Detailed list, human-readable sizes
alias la="ls -A"  # Show hidden files
alias mv="mv -i"  # Confirm before overwriting
alias tac="gtac"
alias gg="ghq get -p"
alias ggb="ghq get -p --bare"
alias gwa="gwq add -b"  # Add worktree for a new branch
alias gwl="gwq list -v"  # Worktree list (detailed display)
alias gws="gwq status --watch"  # Real-time status monitoring
alias gwr="gwq remove"  # Remove worktree
alias chz="chezmoi"

# History settings
HISTFILE="$HOME/.zsh_history"
HISTSIZE=100000
SAVEHIST=100000
setopt share_history
setopt append_history
setopt inc_append_history
setopt hist_ignore_all_dups  # Do not save duplicate commands in history
setopt hist_ignore_space  # Do not save commands starting with space in history (for secret commands)
setopt hist_reduce_blanks  # Remove extra spaces to compact history

# History search with fzf
function fzf-history-selection() {
    BUFFER="$(history -n 1 | tac | awk '!a[$0]++' | fzf --query "$LBUFFER" --layout=reverse)"
    CURSOR="$#BUFFER"
    zle reset-prompt
}
zle -N fzf-history-selection
bindkey '^R' fzf-history-selection

# Project directory search and navigation with fzf
function fzf-src () {
    local selected_dir="$(ghq list -p | fzf --query "$LBUFFER" --layout=reverse)"
    if [ -n "$selected_dir" ]; then
        BUFFER="cd ${selected_dir}"
        zle accept-line
    fi
    zle clear-screen
}
zle -N fzf-src
bindkey '^G' fzf-src

# Directory navigation enhancements
setopt auto_cd  # Change directory by just typing the directory name
setopt auto_pushd  # Automatically add to directory stack on cd (can return with popd)
setopt pushd_ignore_dups  # Do not add duplicates to the stack

# Prompt enhancements
setopt prompt_subst # Allow variable and command expansion in prompt
autoload -Uz vcs_info
zstyle ':vcs_info:git:*' formats '%b'
zstyle ':vcs_info:*' enable git
precmd() {
    vcs_info
    print -Pn "\e]2;%-3~\a" # Set terminal title to current directory
    PS1="%F{green}>%f "
    RPROMPT=$'%{\033[32m%}${vcs_info_msg_0_}${vcs_info_msg_0_:+ @ }%2~%{\033[0m%}'
}

# Enable direnv
eval "$(direnv hook zsh)"

# Google Cloud SDK settings
export PATH="$PATH:$HOME/google-cloud-sdk/bin"
if [ -f "$HOME/google-cloud-sdk/path.zsh.inc" ]; then . "$HOME/google-cloud-sdk/path.zsh.inc"; fi
if [ -f "$HOME/google-cloud-sdk/completion.zsh.inc" ]; then . "$HOME/google-cloud-sdk/completion.zsh.inc"; fi

# Sleep control (macOS)
alias sleepon='sudo pmset -a disablesleep 0'
alias sleepoff='sudo pmset -a disablesleep 1'

# Android SDK
export ANDROID_HOME="$HOME/Library/Android/sdk"
export PATH="$PATH:$ANDROID_HOME/emulator"
export PATH="$PATH:$ANDROID_HOME/platform-tools"

# Kiro terminal integration
[[ "$TERM_PROGRAM" == "kiro" ]] && . "$(kiro --locate-shell-integration-path zsh)"

# Rancher Desktop
export PATH="$HOME/.rd/bin:$PATH"

# Plugins (install once, then source; add checks to avoid re-cloning)
if [ ! -d "$HOME/.zsh/zsh-autosuggestions" ]; then
    git clone https://github.com/zsh-users/zsh-autosuggestions "$HOME/.zsh/zsh-autosuggestions"
fi
source "$HOME/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh"

# Must: Place at the very end
if [ ! -d "$HOME/.zsh/zsh-syntax-highlighting" ]; then
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git "$HOME/.zsh/zsh-syntax-highlighting"
fi
source "$HOME/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
